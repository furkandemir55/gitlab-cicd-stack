stages:
  - set_variables
  - build
  - deploy

cache:
  paths:
    - .env

set_variables:
  stage: set_variables
  environment: "staging"
  cache:
    policy: push
    paths:
      - .env
  script:
    - chmod +x set-gitlab-variables.sh
    - ./set-gitlab-variables.sh
  only:
    - master
  tags:
    - arge-server

build:
  stage: build
  needs: [ set_variables ]
  cache:
    policy: pull
    paths:
      - .env
  variables:
    PROJECT_PATH: "/arge/${CI_PROJECT_ID}_${CI_PROJECT_NAME}"
  script:
    - mkdir -p ${PROJECT_PATH}/{temp,live} && rm -rf ${PROJECT_PATH}/old 2>/dev/null
    - rsync -av --progress . ${PROJECT_PATH}/temp --exclude .git
    - cd ${PROJECT_PATH}/temp && docker-compose build
    - cd ${PROJECT_PATH}/live 2>/dev/null && cat docker-compose.yml 2>/dev/null && docker-compose down --remove-orphans  # if live project existed, stop containers
    - mv ${PROJECT_PATH}/live ${PROJECT_PATH}/old
    - mv ${PROJECT_PATH}/temp ${PROJECT_PATH}/live
  only:
    - master
  tags:
    - arge-server
deploy:
  stage: deploy
  needs: [ build ]
  cache: #to reset cache to default
    policy: push
    paths:
      - .env
  variables:
    PROJECT_PATH: "/arge/${CI_PROJECT_ID}_${CI_PROJECT_NAME}"
  script:
    - cd ${PROJECT_PATH}/live && docker-compose up -d
  only:
    - master
  tags:
    - arge-server
